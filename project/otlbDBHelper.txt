package com.example.project;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

import java.security.PublicKey;

public class otlbDBHelper extends SQLiteOpenHelper {
    private static final String databaseName = "OtlbDatebase";

    //the flag to check if he logged in
    private static boolean loginFlag = false;

    //every string have the sql to create each table

    private final String loginTableCreation =
            "create table login(PersonalID integer primary key autoincrement, "
            + "First_name text not null, Last_name text not null, Email text not null unique, "
            + "Location text not null, Password text not null,PhoneNumber integer not null unique);";

    private final String mainCourseTableCreation =
            "create table mainCourse(CourseID integer primary key autoincrement, "
            + "Name text not null);";

    private final String shopTableCreation =
            "create table shop(ShopID integer primary key autoincrement, "
            + "Name text not null,Description text, "
            + "Course_ID integer,FOREIGN KEY(Course_ID) REFERENCES mainCourse (CourseID));";

    private final String itemTableCreation =
            "create table item(ItemID integer primary key autoincrement, "
            + "Name text not null,Price integer not null, "
            + "Shop_ID integer,FOREIGN KEY(Shop_ID) REFERENCES mainCourse (ShopID));";
    //------------------------------------------------------
    private SQLiteDatabase otlbDatabase;
    public otlbDBHelper(Context context){super(context, databaseName,null,2); }

    //on create

    @Override
    public void onCreate(SQLiteDatabase db) {
    db.execSQL(loginTableCreation);
    db.execSQL(mainCourseTableCreation);
    db.execSQL(shopTableCreation);
    db.execSQL(itemTableCreation);

    //entering values into the tables
        //mainCourse table
        db.execSQL("insert into mainCourse (Name) values('Restaurant')");
        db.execSQL("insert into mainCourse (Name) values('pharmacy')");
        db.execSQL("insert into mainCourse (Name) values('supermarket')");
        db.execSQL("insert into mainCourse (Name) values('fruits')");
        db.execSQL("insert into mainCourse (Name) values('meat')");
        //shop table
            //Restaurant type
        db.execSQL("insert into shop (Name,Course_ID) values('Buffalo Burger',1)");
        db.execSQL("insert into shop (Name,Course_ID) values('KFC',1)");
        db.execSQL("insert into shop (Name,Course_ID) values('Ibn Alsham',1)");
        db.execSQL("insert into shop (Name,Course_ID) values('Karm Alsham',1)");
        db.execSQL("insert into shop (Name,Course_ID) values('Heart Attack',1)");
            //pharmacy type
        db.execSQL("insert into shop (Name,Course_ID) values('',2)");
        db.execSQL("insert into shop (Name,Course_ID) values('',2)");
        db.execSQL("insert into shop (Name,Course_ID) values('',2)");
        db.execSQL("insert into shop (Name,Course_ID) values('',2)");
        db.execSQL("insert into shop (Name,Course_ID) values('',2)");
            //supermarket type
        db.execSQL("insert into shop (Name,Course_ID) values('',3)");
        db.execSQL("insert into shop (Name,Course_ID) values('',3)");
        db.execSQL("insert into shop (Name,Course_ID) values('',3)");
        db.execSQL("insert into shop (Name,Course_ID) values('',3)");
        db.execSQL("insert into shop (Name,Course_ID) values('',3)");
            //fruits type
        db.execSQL("insert into shop (Name,Course_ID) values('',4)");
        db.execSQL("insert into shop (Name,Course_ID) values('',4)");
        db.execSQL("insert into shop (Name,Course_ID) values('',4)");
        db.execSQL("insert into shop (Name,Course_ID) values('',4)");
        db.execSQL("insert into shop (Name,Course_ID) values('',4)");
            //meat type
        db.execSQL("insert into shop (Name,Course_ID) values('',5)");
        db.execSQL("insert into shop (Name,Course_ID) values('',5)");
        db.execSQL("insert into shop (Name,Course_ID) values('',5)");
        db.execSQL("insert into shop (Name,Course_ID) values('',5)");
        db.execSQL("insert into shop (Name,Course_ID) values('',5)");
    }

    //on upgrade


    @Override
    public void onUpgrade(SQLiteDatabase db, int i, int i1) {
        db.execSQL("DROP TABLE IF EXISTS login");
        db.execSQL("DROP TABLE IF EXISTS mainCourse");
        db.execSQL("DROP TABLE IF EXISTS shop");
        db.execSQL("DROP TABLE IF EXISTS item");
        onCreate(db);
    }

    ////////functions for the login and register

    //function to get the information in the register
    public void getRegisterInformation(String Fname,String Lname,String Email,String Password,String Location,int PhoneNumber)
    {
        ContentValues row=new ContentValues();
        row.put("First_name",Fname);
        row.put("Last_name",Lname);
        row.put("Email",Email);
        row.put("Password",Password);
        row.put("Location",Location);
        row.put("PhoneNumber",PhoneNumber);
        otlbDatabase = getWritableDatabase();
        otlbDatabase.insert("login",null, row);
        otlbDatabase.close();
    }

    //function to check the information at the login
    //if the email and password correct will return true ,otherwise false
    public boolean loginCheck(String Email,String Password)
    {
        otlbDatabase = getReadableDatabase();
        Cursor cursor = otlbDatabase.rawQuery("Select Password from login where Email="+Email,null);
        cursor.moveToFirst();
        otlbDatabase.close();
        if(cursor.getCount()!=0)
        {
            if(cursor.getString(0).equals(Password)) {
                loginFlag = true;
                return true;
            }
        }
        else
        {
            return false;
        }
        return false;
    }

    //function to check if logged in or in guest mode
    //if logged in will return true , if guest mode will return false
    public boolean isLogin()
    {
        if(loginFlag == true)
            return true;
        else
            return false;
    }

//----------------------------------------------------------------
    ////////functions for the main courses

    public Cursor fetchAllCourses()
    {
        otlbDatabase = getReadableDatabase();
        Cursor cursor = otlbDatabase.rawQuery("select Name from mainCourse",null);
        cursor.moveToFirst();
        otlbDatabase.close();
        return cursor;
    }

    ////////functions for the shops
        //returns all the shops from the chosen course the user will choose in the main course page
    public Cursor fetchShops(String courseName)
    {
        otlbDatabase = getReadableDatabase();
        Cursor getCourseID = otlbDatabase.rawQuery("select CourseID from mainCourse where Name="+courseName,null);
        getCourseID.moveToFirst();
        String CourseID = getCourseID.getString(0);
        Cursor getShopName = otlbDatabase.rawQuery("select Name,Description from shop where Course_ID="+CourseID,null);
        getShopName.moveToFirst();
        otlbDatabase.close();
        return getShopName;
    }
        //returns the shops that have the same name that the user will write in the search bar
    public Cursor searchShops(String searchName)
    {
        otlbDatabase = getReadableDatabase();
        Cursor getShopName = otlbDatabase.rawQuery("select Name,Description from shop where Name like ?",new String[]{"%"+searchName+"%"});
        getShopName.moveToFirst();
        otlbDatabase.close();
        return getShopName;
    }
    ////////functions for the items

    public Cursor fetchItems(String shopName)
    {
        otlbDatabase = getReadableDatabase();
        Cursor getShopID = otlbDatabase.rawQuery("select ShopID from shop where Name="+shopName,null);
        getShopID.moveToFirst();
        String ShopID = getShopID.getString(0);
        Cursor getItemName = otlbDatabase.rawQuery("select Name,Price from item where Shop_ID="+ShopID,null);
        getItemName.moveToFirst();
        otlbDatabase.close();
        return getItemName;
    }

}
